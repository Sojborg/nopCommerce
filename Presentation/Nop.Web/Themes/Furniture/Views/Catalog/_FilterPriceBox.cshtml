@model CatalogPagingFilteringModel.PriceRangeFilterModel
@using Nop.Web.Models.Catalog;
@helper FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
{
string rangeText = "";
string selected = "";
if (filterItem.Selected)
{
    selected = "selected=\"selected\"";
}

if (String.IsNullOrWhiteSpace(filterItem.From))
{
    rangeText = string.Format("<option value='{2}' {3}>{0} {1}</option>", T("Furniture.PriceRangeFilter.Under").Text, filterItem.To, filterItem.FilterUrl, selected);
}
else if (String.IsNullOrWhiteSpace(filterItem.To))
{
    rangeText = string.Format("<option value='{2}' {3}>{0} {1}</option>", T("Furniture.PriceRangeFilter.Over").Text, filterItem.From, filterItem.FilterUrl, selected);
}
else
{
    rangeText = string.Format("<option value='{2}' {3}>{0} - {1}</option>", filterItem.From, filterItem.To, filterItem.FilterUrl, selected);
}
    <text>@Html.Raw(rangeText)</text>
}
@if (Model.Enabled)
{
    <div class="product-filter price-range-filter">
        <span>@T("Filtering.PriceRangeFilter")</span>
        <select onchange="setLocation(this.value);">
            @{
                var rangeText = string.Format("<option value='{1}'>{0}</option>", T("Furniture.NoFilter"), Model.RemoveFilterUrl);
                <text>@Html.Raw(rangeText)</text>
            }
            @foreach (var item in Model.Items)
            {
                @FormatPriceRangeText(item)
            }
        </select>
    </div>
                }